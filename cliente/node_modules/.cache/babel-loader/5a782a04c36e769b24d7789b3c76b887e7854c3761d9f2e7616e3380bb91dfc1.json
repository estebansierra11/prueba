{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\prueba\\\\cliente\\\\src\\\\componentes\\\\TaskList.js\",\n  _s = $RefreshSig$();\n// src/componentes/TaskList.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        const response = await axios.get('http://localhost/prueba/servidor/api.php');\n        console.log('Response:', response); // Log para ver la respuesta completa\n\n        // Verificar si la respuesta es un string (esto indica un posible error)\n        if (typeof response.data === 'string') {\n          console.error('Error fetching tasks: Response data is a string, not JSON');\n          return;\n        }\n\n        // Parsear la respuesta JSON\n        const responseData = response.data;\n        if (Array.isArray(responseData)) {\n          // Convertir los IDs a números enteros usando map\n          const tasksWithIntIds = responseData.map(task => ({\n            ...task,\n            id: parseInt(task.id) // Convertir id a número entero\n          }));\n          setTasks(tasksWithIntIds);\n        } else {\n          console.error('Error fetching tasks: Response data is not an array');\n        }\n      } catch (error) {\n        console.error('Error fetching tasks:', error);\n      }\n    };\n    fetchTasks();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Lista de Tareas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Tarea\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: task.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: task.task\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 29\n          }, this)]\n        }, task.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(TaskList, \"bBd6yqkqV9dlkj9ENgRyXKaiXpk=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","TaskList","_s","tasks","setTasks","fetchTasks","response","get","console","log","data","error","responseData","Array","isArray","tasksWithIntIds","map","task","id","parseInt","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/prueba/cliente/src/componentes/TaskList.js"],"sourcesContent":["// src/componentes/TaskList.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst TaskList = () => {\r\n    const [tasks, setTasks] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchTasks = async () => {\r\n            try {\r\n                const response = await axios.get('http://localhost/prueba/servidor/api.php');\r\n                console.log('Response:', response); // Log para ver la respuesta completa\r\n\r\n                // Verificar si la respuesta es un string (esto indica un posible error)\r\n                if (typeof response.data === 'string') {\r\n                    console.error('Error fetching tasks: Response data is a string, not JSON');\r\n                    return;\r\n                }\r\n\r\n                // Parsear la respuesta JSON\r\n                const responseData = response.data;\r\n\r\n                if (Array.isArray(responseData)) {\r\n                    // Convertir los IDs a números enteros usando map\r\n                    const tasksWithIntIds = responseData.map(task => ({\r\n                        ...task,\r\n                        id: parseInt(task.id) // Convertir id a número entero\r\n                    }));\r\n                    setTasks(tasksWithIntIds);\r\n                } else {\r\n                    console.error('Error fetching tasks: Response data is not an array');\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching tasks:', error);\r\n            }\r\n        };\r\n\r\n        fetchTasks();\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <h2>Lista de Tareas</h2>\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>ID</th>\r\n                        <th>Tarea</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {tasks.map(task => (\r\n                        <tr key={task.id}>\r\n                            <td>{task.id}</td>\r\n                            <td>{task.task}</td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TaskList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}